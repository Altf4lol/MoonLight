package wtf.moonlight.features.modules.impl.exploit;

import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import wtf.moonlight.events.annotations.EventTarget;
import wtf.moonlight.events.impl.packet.PacketEvent;
import wtf.moonlight.events.impl.player.MotionEvent;
import wtf.moonlight.features.modules.Module;
import wtf.moonlight.features.modules.ModuleCategory;
import wtf.moonlight.features.modules.ModuleInfo;
import wtf.moonlight.features.values.impl.ModeValue;

@ModuleInfo(name = "NoRotate", category = ModuleCategory.Exploit)
public class NoRotate extends Module {
    public final ModeValue mode = new ModeValue("Mode", new String[]{"Edit","Packet"}, "Edit", this);
    private float yaw, pitch;
    private boolean edit;

    @EventTarget
    private void onPacket(PacketEvent event) {
        Packet<?> packet = event.getPacket();
        if (packet instanceof S08PacketPlayerPosLook s08PacketPlayerPosLook) {
            s08PacketPlayerPosLook.setRotations(mc.thePlayer.rotationYaw, mc.thePlayer.rotationPitch);

            switch (mode.get()) {
                case "Edit":
                    this.edit = true;
                    this.yaw = s08PacketPlayerPosLook.getYaw();
                    this.pitch = s08PacketPlayerPosLook.getPitch();
                    break;

                case "Packet":
                    sendPacket(new C03PacketPlayer.C05PacketPlayerLook(s08PacketPlayerPosLook.getYaw(), s08PacketPlayerPosLook.getPitch(), mc.thePlayer.onGround));
                    break;
            }
        }
    }
    @EventTarget
    public void onPreMotion(MotionEvent event) {
        if (event.isPre() && this.edit) {
            event.yaw = this.yaw;
            event.pitch = this.pitch;
            this.edit = false;
        }
    }
}
